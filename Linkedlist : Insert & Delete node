
#include <bits/stdc++.h>
using namespace std;

class node{
    public:
    int data;
    node* next;
    
    node(int val){
        data = val;
        next = NULL;
    }
};

void insertAtTail(node* &head, int val){
    node *n = new node(val);
    n->next = NULL;
    if(head==NULL){
        head = n;
        return;
    }
    node* temp = head;
    while(temp->next!=NULL){
        temp = temp->next;
    }
    temp->next = n;
    
}
void insertAtHead(node* &head, int val){
    node *n = new node(val);
    n->next = head;
    head = n;
}
void deleteNodeBeg(node* &head){
    node *n;
    if(head==NULL){
        cout<<"List is empty";
    }
    head = head->next;
    delete n;
}
void deleteNodeBetween(node* &head,int val){
    node* temp = head;
    //only if 1 node
    if(head->next==NULL){
        delete(head);
        return;
    }
    while(temp->next->data!=val){
        temp = temp->next;
    }
    node * todel = temp->next;
    temp->next = temp->next->next;
    delete todel;
}
void display(node* head){
    node *temp = head;
    while(temp!=NULL){
        cout << temp->data <<" ";
        temp = temp->next;
    }
    cout<<endl;
}
int main() {
    
    node* head = NULL;
    insertAtTail(head,1);
    insertAtTail(head,5);
    insertAtTail(head,10);
    insertAtTail(head,145);
    insertAtHead(head,8);
    insertAtHead(head,11);
    insertAtTail(head,24);
    deleteNodeBeg(head);
    deleteNodeBeg(head);
    deleteNodeBetween(head,10);
    display(head);
    return 0;
}
